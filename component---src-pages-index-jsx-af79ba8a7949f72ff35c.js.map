{"version":3,"sources":["webpack://petcompufc.github.io/./src/components/index/carousel.jsx","webpack://petcompufc.github.io/./src/pages/index.jsx"],"names":["slides","useState","isLocked","setLocked","slideIndex","setSlideIndex","nextSlide","length","useEffect","i","setInterval","clearInterval","aria-atomic","aria-label","aria-live","aria-roledescription","borderRadius","height","maxWidth","mx","my","overflow","pos","role","width","sx","map","slide","index","image","getImage","aria-hidden","h","key","desc","left","transform","transition","top","w","alt","as","GatsbyImage","bg","l","t","p","color","fontSize","text","colorScheme","icon","onClick","isRound","bottom","size","right","data","useStaticQuery","title","description","carousel1","childImageSharp","gatsbyImageData","carousel2","carousel3"],"mappings":"uQA+JA,MA/IA,YAAgC,IAAXA,EAAU,EAAVA,OAAU,GACCC,eAAS,GAAhCC,EADsB,KACZC,EADY,QAEOF,cAAS,GAAtCG,EAFsB,KAEVC,EAFU,KAIvBC,EAAY,kBAAMD,EAAcD,GAAeJ,EAAOO,OAAS,EAAK,EAAKH,EAAa,IAW5F,OARAI,gBAAU,WACR,IAAKN,EAAU,CACb,IAAMO,EAAIC,YAAYJ,EAAW,KACjC,OAAO,kBAAMK,cAAcF,IAE7B,OAAO,gBAIP,wBAAC,KAAD,CACEG,cAAY,QACZC,aAAW,WACXC,YAAWZ,EAAW,SAAW,MACjCa,uBAAqB,WACrBC,aAAc,EACdC,OAAO,KACPC,SAAS,MACTC,GAAG,OACHC,GAAI,EACJC,SAAS,SACTC,IAAI,WACJC,KAAK,QACLC,MAAM,OACNC,GAAI,CAAE,qBAAsB,0CAE3BzB,EAAO0B,KAAI,SAACC,EAAOC,GAClB,IAAMC,GAAQC,OAASH,EAAME,OAC7B,OACE,wBAAC,KAAD,CACEd,uBAAqB,QACrBgB,cAAa3B,IAAewB,EAAQ,QAAU,OAC9CI,EAAE,OACFC,IAAKN,EAAMO,KACXC,KAAK,IACLd,SAAS,SACTC,IAAI,WACJc,UAAS,cAAuC,KAAtBR,EAAQxB,GAAzB,KACTiC,WAAW,0BACXC,IAAI,IACJC,EAAE,QAEF,wBAAC,IAAD,CACEC,IAAKb,EAAMO,KACXO,GAAIC,IACJV,EAAE,OACFH,MAAOA,EACPM,KAAM,EACNb,IAAI,aAEN,wBAAC,IAAD,CACEmB,GAAG,KACHE,GAAG,qBACHC,EAAE,IACFC,EAAE,IACFC,EAAG,EACHC,MAAM,QACNC,SAAS,MACT1B,IAAI,WACJiB,EAAE,QAEDZ,EAAMsB,UAKf,wBAAC,IAAD,CACEC,YAAY,MACZrC,aAAW,uBACXsC,KAAM,wBAAC,MAAD,MACNC,QAvEY,kBAAM/C,EAAcD,GAAc,EAAKJ,EAAOO,OAAS,EAAMH,EAAa,IAwEtFiD,SAAO,EACP/B,IAAI,WACJa,KAAM,EACNG,IAAI,IACJgB,OAAO,IACPlC,GAAG,OACHmC,KAAK,OAEP,wBAAC,IAAD,CACEL,YAAY,MACZrC,aAAYX,EAAW,uBAAyB,sBAChDiD,KAAMjD,EAAW,wBAAC,MAAD,MAAa,wBAAC,MAAD,MAC9BkD,QAAS,kBAAMjD,GAAWD,IAC1BmD,SAAO,EACP/B,IAAI,WACJa,KAAK,MACLC,UAAU,mBACVmB,KAAK,KACLD,OAAQ,IAEV,wBAAC,IAAD,CACEJ,YAAY,MACZrC,aAAW,mBACXsC,KAAM,wBAAC,MAAD,MACNC,QAAS9C,EACT+C,SAAO,EACP/B,IAAI,WACJkC,MAAO,EACPlB,IAAI,IACJgB,OAAO,IACPlC,GAAG,OACHmC,KAAK,S,UCrEb,EAhDkB,WAChB,IAAME,GAAOC,oBAAe,cAoB5B,OACE,wBAAC,IAAD,KACE,wBAAC,IAAD,CACEC,MAAM,iBACNC,YAAY,wHAEd,wBAAC,EAAD,CACE5D,OAAQ,CAAC,CACP6B,MAAO4B,EAAKI,UAAUC,gBAAgBC,gBACtC7B,KAAM,wCACNe,KAAM,0BAER,CACEpB,MAAO4B,EAAKO,UAAUF,gBAAgBC,gBACtC7B,KAAM,yDACNe,KAAM,8BAER,CACEpB,MAAO4B,EAAKQ,UAAUH,gBAAgBC,gBACtC7B,KAAM,8CACNe,KAAM","file":"component---src-pages-index-jsx-af79ba8a7949f72ff35c.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport PropTypes from 'prop-types'\nimport {\n  Box,\n  IconButton,\n  Image,\n  Heading\n} from '@chakra-ui/react'\nimport {\n  GrPrevious,\n  GrNext,\n  GrLock,\n  GrUnlock\n} from 'react-icons/gr'\n\nfunction Carousel ({ slides }) {\n  const [isLocked, setLocked] = useState(false)\n  const [slideIndex, setSlideIndex] = useState(0)\n\n  const nextSlide = () => setSlideIndex(slideIndex >= (slides.length - 1) ? 0 : (slideIndex + 1))\n  const prevSlide = () => setSlideIndex(slideIndex <= 0 ? (slides.length - 1) : (slideIndex - 1))\n\n  useEffect(() => {\n    if (!isLocked) {\n      const i = setInterval(nextSlide, 6000)\n      return () => clearInterval(i)\n    }\n    return () => { }\n  })\n\n  return (\n    <Box\n      aria-atomic='false'\n      aria-label='masthead'\n      aria-live={isLocked ? 'polite' : 'off'}\n      aria-roledescription='carousel'\n      borderRadius={8}\n      height='lg'\n      maxWidth='4xl'\n      mx='auto'\n      my={3}\n      overflow='hidden'\n      pos='relative'\n      role='group'\n      width='100%'\n      sx={{ '-webkit-mask-image': '-webkit-radial-gradient(white, black)' }}\n    >\n      {slides.map((slide, index) => {\n        const image = getImage(slide.image)\n        return (\n          <Box\n            aria-roledescription='slide'\n            aria-hidden={slideIndex === index ? 'false' : 'true'}\n            h='100%'\n            key={slide.desc}\n            left='0'\n            overflow='hidden'\n            pos='absolute'\n            transform={`translateX(${(index - slideIndex) * 100}%)`}\n            transition='all 0.5s 250ms ease-out'\n            top='0'\n            w='100%'\n          >\n            <Image\n              alt={slide.desc}\n              as={GatsbyImage}\n              h='100%'\n              image={image}\n              left={0}\n              pos='absolute'\n            />\n            <Heading\n              as='h3'\n              bg='rgba(0, 0, 0, 0.4)'\n              l='0'\n              t='0'\n              p={2}\n              color='white'\n              fontSize='4xl'\n              pos='absolute'\n              w='100%'\n            >\n              {slide.text}\n            </Heading>\n          </Box>\n        )\n      })}\n      <IconButton\n        colorScheme='red'\n        aria-label='Go to previous slide'\n        icon={<GrPrevious />}\n        onClick={prevSlide}\n        isRound\n        pos='absolute'\n        left={2}\n        top='0'\n        bottom='0'\n        my='auto'\n        size='sm'\n      />\n      <IconButton\n        colorScheme='red'\n        aria-label={isLocked ? 'Start slide rotation' : 'Stop slide rotation'}\n        icon={isLocked ? <GrLock /> : <GrUnlock />}\n        onClick={() => setLocked(!isLocked)}\n        isRound\n        pos='absolute'\n        left='50%'\n        transform='translateX(-50%)'\n        size='md'\n        bottom={2}\n      />\n      <IconButton\n        colorScheme='red'\n        aria-label='Go to next slide'\n        icon={<GrNext />}\n        onClick={nextSlide}\n        isRound\n        pos='absolute'\n        right={2}\n        top='0'\n        bottom='0'\n        my='auto'\n        size='sm'\n      />\n    </Box>\n  )\n}\n\nCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.shape({\n      childImageSharp: PropTypes.shape({\n        gatsbyImageData: PropTypes.shape({\n          layout: PropTypes.string,\n          backgroundColor: PropTypes.color,\n          images: PropTypes.shape({\n            fallback: PropTypes.shape({\n              src: PropTypes.string,\n              srcSet: PropTypes.string,\n              size: PropTypes.string\n            }),\n            sources: PropTypes.arrayOf(PropTypes.shape({\n              srcSet: PropTypes.string,\n              type: PropTypes.string,\n              sizes: PropTypes.string\n            })),\n            widht: PropTypes.integer,\n            height: PropTypes.integer\n          })\n        })\n      })\n    }),\n    desc: PropTypes.string,\n    text: PropTypes.string\n  })).isRequired\n}\n\nexport default Carousel\n","import { useStaticQuery, graphql } from 'gatsby'\nimport React from 'react'\n\nimport SearchOptimization from '../components/searchOptimization'\nimport Carousel from '../components/index/carousel'\nimport Layout from '../components/layout'\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      carousel1: file(relativePath: { eq: \"carousel1.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(formats: [JPG, WEBP])\n        }\n      },\n      carousel2: file(relativePath: { eq: \"carousel2.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(formats: [JPG, WEBP])\n        }\n      },\n      carousel3: file(relativePath: { eq: \"carousel3.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(formats: [JPG, WEBP])\n        }\n      },\n    }\n  `)\n\n  return (\n    <Layout>\n      <SearchOptimization\n        title='Página Inicial'\n        description='O PET Computação trabalha para enriquecer a experiência de alunos de dentro e fora da Universidade Federal do Ceará'\n      />\n      <Carousel\n        slides={[{\n          image: data.carousel1.childImageSharp.gatsbyImageData,\n          desc: 'Cerimônia de abertura do Include 2020',\n          text: 'Saiba mais sobre o PET'\n        },\n        {\n          image: data.carousel2.childImageSharp.gatsbyImageData,\n          desc: 'PETianos durante a Semana Acadêmica da Computação 2017',\n          text: 'Veja quem faz parte do PET'\n        },\n        {\n          image: data.carousel3.childImageSharp.gatsbyImageData,\n          desc: 'PETianos utilizando soldador na sala do PET',\n          text: 'Conheça nossas atividades'\n        }]}\n      />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}